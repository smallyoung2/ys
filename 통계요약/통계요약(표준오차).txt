표준오차(Standard Error)    

혼자공부하는 데이터 분석 with 파이썬(P392 검증하고 예측하기)

샘플의 평균의 표준편차와 표준오차가 유사
표본 평균의 표준편차(표준오차) = 모집단의 표준편차 / 제곱근(표본에 포함된 샘플갯수)

sample_cnt = 40
np.std(ns_book7['대출건수']) / np.sqrt(sample_cnt) # 3.048338251806833


###########################################################
표준점수(Standard Score) : z-score
데이터가 정규분포를 따른다고 가정하고, 각 평균에서 얼마나 멀리 떨어져 있는지 
표준편차를 사용해 변환한 점수를 표준점수(standard score) 또는 z 점수(z score)라 한다.

z = (x - 평균) / 표준편차
z = (x - 모집단의 평균) / 표준편차

###########################################################
[누적분포]
표준정규분포 평균이 0이고 표준편차 1인 정규분포
평균이 0이고 표준편차 1을 z 점수 공식을 대입하면 z = x
z 점수를 사용해 전체 데이터가 어떻게 분포되어 있는지 표시

표준정규분포에서 z점수가 1.0 이내에 위치한 샘플은 전체의 68%에 해당한다.
표준정규분포에서 z점수가 2.0 이내에 위치한 샘플은 전체의 95%에 해당한다.

누적분포 구하는 파이썬 함수: 
	stats.norm.cdf(z)
	stats.norm.cdf(0) -> 0.5(50%)
	stats.norm.cdf(1.0) - stats.norm.cdf(-1.0) -> 0.68(68%)
	stats.norm.cdf(2.0) - stats.norm.cdf(-2.0) -> 0.95(95%)

누적분포로 z-score 구하는 파이썬 함수: 
	stats.norm.ppf(0.95) -> 2


###########################################################
[중심극한정리]
표준정규분포를 따르지 않는 데이터는?
정규분포 특성을 유도하는 방법으로 중심극한정리를 사용한다.

무작위로 샘플을 뽑아 만든 표본의 평균은 정규분포에 가깝다.
위의 과정을 여러번 반복 수행하여 전체 평균을 구한다.

# 샘플의 갯수에 따른 평균값
# 전체 : 11.5934
# 20건 : 11.3994
# 30건 : 11.5399(매직넘버)
# 40건 : 11.5613(전체에 가장 가까움)
# 50건 : 11.5321
# 60건 : 11.5115

#%%

# 샘플(40)의 평균의 표준편차
np.std(sample_means) # 3.0355987564235165

# 표준오차(Standard Error)    
# 전체 대출건수의 표준편차를 샘플링 갯수(40)로 제곱근으로 나눔
# 표본 평균의 표준편차 = 모집단의 표준편차 / 제곱근(표본에 포함된 샘플갯수)
np.std(ns_book7['대출건수']) / np.sqrt(40) # 3.048338251806833

# 샘플의 평균의 표준편차와 표준오차가 유사


###############################################################################
# 신뢰구간(Confidence Interval)
# ## 모집단의 평균 범위 추정하기: 신뢰구간
###############################################################################

# 전제조건:
# 만약 딱 하나의 표본이 있다면 모집단의 평균을 추정할 수 있는가?
# 신뢰구간은 표본의 파라미터(평균)가 모집단의 평균 속할 것이라 믿는 모집단의 파라미터 범위이다.


